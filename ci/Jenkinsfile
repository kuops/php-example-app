pipeline {
    
    agent {
        kubernetes {
            label 'php-build-pod'
            defaultContainer 'jnlp'
            yamlFile 'ci/KubernetesPod.yaml'
        }
    }
    
    triggers {
        pollSCM('*/2 * * * 1-5')
    }
    
    environment { 
        REGISTRY_URL = 'docker.k8s.kuops.com'
    }
    
    options {
        timestamps()
        ansiColor('xterm')
        buildDiscarder logRotator(artifactDaysToKeepStr: '7', artifactNumToKeepStr: '30', daysToKeepStr: '7', numToKeepStr: '30')
        disableConcurrentBuilds()
    }
    
    stages {

        stage('Get BuildTag') {
            steps {
                container('composer') {
                    script {
                        getbranch = 'echo ${GIT_BRANCH}|grep -Eo \'[^/]+$\''
                        BUILD_TAG = sh (
                            script: getbranch,
                            returnStdout: true).trim()
                    }
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                container('composer') {
                    sh """
                        composer config repo.packagist composer https://packagist.phpcomposer.com
                        composer install
                    """
                }
            }
        }
        
        stage('Generating key') {
            steps {
                container('composer') {
                    sh 'mv .env.example .env && php artisan key:generate'
                }
            }
        }
        
        stage('Run PHPunit') {
            steps {
                container('composer') {
                    sh './vendor/bin/phpunit'
                }
            }
        }

        stage('Build Image') {
            steps {
                container('docker') {
                    sh """
                        docker build -t ${REGISTRY_URL}/php-example-app:${BUILD_TAG}-${BUILD_NUMBER} .
                        docker push ${REGISTRY_URL}/php-example-app:${BUILD_TAG}-${BUILD_NUMBER}
                    """
                }
            }
        }
        
    }
}
